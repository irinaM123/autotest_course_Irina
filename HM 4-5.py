# Задача Иосифа Флавия
# https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B0_%D0%98%D0%BE%D1%81%D0%B8%D1%84%D0%B0_%D0%A4%D0%BB%D0%B0%D0%B2%D0%B8%D1%8F
# Задача заключается в следующем: по кругу стоит num_people воинов,
# начиная с первого воина они выводят из круга каждого kill_num по счёту.
# Вы должны правильно указать, кто является «выжившим», то есть: последний элемент списка.
#
# num_people=7, kill_num=3 => Значит 7 человек в кругу и каждый третий из него выходит
# [1,2,3,4,5,6,7] - начальный круг
# [1,2,4,5,6,7] => 3 вышел
# [1,2,4,5,7] => 6 вышел
# [1,4,5,7] => 2 вышел
# [1,4,5] => 7 вышел
# [1,4] => 5 вышел
# [4] => 1 вышел, 4 остался последним т.е. выжившим - это наш ответ survivor.

def josephus_task(num_people, kill_num):
    survivor = 0
    circle = []
    # k переменная для определения сколько войнов осталось до конца круга после последнего убитого
    k = 0
    # преобразуем число num_people в список circle, состоящий из чисел от 1 до num_people
    for i in range(1, num_people + 1, 1):
        circle.append(i)
    # s - вспомогательная строка для "убитых" войнов
    s = []
    # если в круге 1 воин, то он останется жить
    if len(circle) == 1:
        survivor = circle[0]
    # если убивают каждого первого, то жить останется последний воин
    elif kill_num == 1:
        survivor = len(circle)
    else:
        while len(circle) != 2:
            if len(circle) >= kill_num:
                # найдем все значения списка от 0 индекса до длины списка с шагом kill_num и поместим в отдельный список
                for i in range(kill_num - 1, len(circle), kill_num):
                    s.append(circle[i])
                # найдем сколько войнов остались живы в первом списке после последнего убитого война
                k = len(circle) - 1 - circle.index(s[-1])
                # переместим последних живых войнов на первое место списка войнов и удалим их из хвоста списка
                for i in range(0, k):
                    circle.insert(0, circle[-1])
                    del circle[-1]
                # у нас есть список всех войнов, и список тех, кто умер. Надо убрать из первого второе
                for i in circle:
                    if i in s:
                        circle.remove(i)
            # после выполнения цикла имеем список из двух оставшихся в живых войнов для случая num_people>kill_num
            else:
                while len(circle) != 2:
                    m = 0
                    # достроим список войнов до kill_num войнами с начала круга
                    for i in range(0, kill_num - len(circle), 1):
                        circle.append(circle[i])
                        m = m + 1
                    # удалим последний элемент - этого война убили в эту итерацию
                    del circle[-1]
                    # удалим элементы с начала строки до элемента с индексом m - они переместились в хвост списка
                    del circle[0:m]
                # после выполнения цикла имеем список из двух оставшихся в живых войнов для случая num_people<kill_num
        # кто из 2 человек останется жить, зависит от kill_num. Если он четный - то первый, а если нечетный - второй
        if kill_num % 2 == 0:
            del circle[1]
            survivor = circle[0]
        else:
            del circle[0]
            survivor = circle[0]
    return survivor

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    (7, 3), (11, 19), (1, 300), (14, 2), (100, 1), (1234, 56), (987, 11)
]

test_data = [
    4, 10, 1, 13, 100, 1130, 379
]


for i, d in enumerate(data):
    assert josephus_task(*d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')